{"version":3,"file":"static/js/648.f92a8788.chunk.js","mappings":"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","sources":["../node_modules/@restart/ui/esm/Button.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const componentProps = {\n      ...defaultProps,\n      ...props\n    };\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...componentProps\n    });\n  });\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return false;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n    return true;\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.21\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.21 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            const newValues = checkTargetForNewValues(this, target, origin);\n            // If new values have been added, for instance named color values, transform these\n            if (transformValues && newValues) {\n                origin = transformValues(origin);\n            }\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.21\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["_excluded","useButtonProps","_ref2","tagName","disabled","href","target","rel","role","onClick","_ref2$tabIndex","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","Button","React","_ref","ref","asProp","as","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","_useButtonProps","assign","_useButtonProps2","_slicedToArray","buttonProps","Component","_jsx","displayName","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","bsPrefix","_ref$variant","variant","size","_ref$active","active","_ref$disabled","className","_objectWithoutProperties","prefix","useBootstrapPrefix","_objectSpread","classNames","concat","propTypes","CloseButton","_ref$ariaLabel","ariaLabel","rHyphen","pascalCase","str","toUpperCase","replace","_","chr","slice","createWithBsPrefix","arguments","_ref$displayName","defaultProps","BsComponent","_ref2$as","Tag","componentProps","resolvedPrefix","_get","Reflect","get","bind","property","receiver","base","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","value","apply","this","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","Math","abs","binarySubdivide","easeIn","easeOut","easeInOut","isEasingArray","ease","Array","isArray","backOut","backIn","reverseEasing","backInOut","mirrorEasing","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","pow","easingDefinitionToFunction","definition","invariant","_definition","keyframes","values","easing","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","map","state","done","absoluteTimes","offset","o","convertOffsetToTimes","defaultOffset","mapTimeToKeyframe","interpolate","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","velocity","_ref$mass","mass","warning","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","options","some","spring","resolveSpring","restDelta","restSpeed","origin","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","v","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","_toConsumableArray","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","round","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","iterationIsOdd","Boolean","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","acos","MotionContext","LazyContext","strict","isRefObject","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","PresenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","LayoutGroupContext","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","translateAlias","y","z","transformPerspective","numTransforms","getValueAsType","transform","int","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","alpha","originX","progressPercentage","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","valueAsType","default","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","isMotionValue","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","_a","calcOrigin","dashKeys","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","substring","resolveVariantFromProps","currentValues","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","_classCallCheck","isMounted","_createClass","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","pipe","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","resolveVariant","getCurrent","getVelocity","optimizedAppearDataAttribute","instantAnimationState","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","push","keyframeOptions","_defineProperty","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","maxDefaults","applyDefaultFilter","_v$slice$split","split","_v$slice$split2","match","floatRegex","unit","defaultValue","functionRegex","filter","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","add","testValueType","dimensionValueTypes","percent","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","motionValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","hasAnimated","appearId","shouldReduceMotion","remove","animateVariant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","acc","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","_len","args","_key","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","steps","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","output","to","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","clear","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","getPropertyValue","isCSSVariableToken","resolveCSSVariables","obj","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parsed","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","checkStringStartsWith","cssVariableRegex","arr","item","index","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","analyseComplexValue","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","_ref$clamp","isClamp","inputLength","interpolator","progressInRange","remaining","offsetProgress","fillOffset","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","seconds","milliseconds","frameDuration","MotionValue","init","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","subscription","getSize","eventManagers","passiveEffect","stopPassiveEffect","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","isColorString","r","parseInt","splitColor","_ref$alpha","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","_v$match","_v$match2","cssVarTokeniser","regex","countKey","colorTokeniser","colorRegex","numberTokeniser","tokenise","_info$values","tokenised","originalValue","toString","parseComplexValue","createTransformer","_analyseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}